{"version":3,"sources":["components/logo.jpg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","Header","props","src","logo","alt","width","margin","results","display","flexDirection","justifyContent","padding","fontFamily","maxWidth","buttonContainerMonster","form","border","paddingTop","position","formTitle","textAlign","top","backgroundColor","borderRadius","fontWeight","optionals","App","classes","useState","movieTitle1","setMovieTitle1","movieTitle2","setMovieTitle2","prefix","setPrefix","suffix","setSuffix","vsToggle","setVsToggle","getRandomItem","creatureList","Math","floor","random","length","handleInitialTitle","title1","title2","one","many","generatePrefix","generateSuffix","useEffect","className","Typography","sx","variant","gutterBottom","Button","onClick","item","currentMonsterName","newMonsterName","FormControlLabel","control","Switch","label","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.793aa485.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7d825637.jpg\";","import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\nimport {Paper} from \"@mui/material\";\r\nimport logo from './logo.jpg';\r\n\r\nconst useStyles = makeStyles(() =>( {\r\n    root: {\r\n\r\n    }\r\n}))\r\n\r\nconst Header =(props) =>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <img src={logo} alt={'logo'}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Button, Switch, FormControlLabel, FormControl, FormGroup, Typography} from '@mui/material';\nimport Header from \"./components/Header\";\nimport * as creatureList from './name.json';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '400px',\n        margin: '0 auto',\n    },\n    results: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        margin: '10px auto',\n        padding: '10px',\n        fontFamily: 'Amatic SC',\n        maxWidth: '400px'\n    },\n    buttonContainerMonster: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        margin: '10px 0'\n    },\n    form: {\n        border: '1px solid black',\n        padding: '10px',\n        paddingTop: '20px' ,\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'relative',\n    },\n    formTitle: {\n        position: 'absolute',\n        textAlign: 'center',\n        top: '-12px',\n        width: '380px',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: 10,\n        fontWeight: 'bold'\n    },\n    optionals: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'left'\n    }\n}))\n\nfunction App() {\n  const classes = useStyles();\n\n  const [movieTitle1, setMovieTitle1] = useState(\"\");\n  const [movieTitle2, setMovieTitle2] = useState(\"\");\n  const [prefix, setPrefix] = useState(null);\n  const [suffix, setSuffix] = useState(null);\n  const [vsToggle, setVsToggle] = useState(false);\n\n  const getRandomItem = () => {\n      return creatureList.monster[Math.floor(Math.random() * creatureList.monster.length)];\n  }\n\n  const handleInitialTitle = () => {\n      let title1 = getRandomItem();\n      let title2 = getRandomItem();\n      while(title1 === title2) {\n          title2 = getRandomItem();\n      }\n      setMovieTitle1(title1.one);\n      setMovieTitle2(title2.many);\n  }\n\n  const handleTitle1Change = () => {\n      const item = getRandomItem();\n      setMovieTitle1(item.one);\n  }\n\n  const handleTitle2Change = () => {\n      const currentMonsterName = movieTitle2.many;\n      let newMonsterName = getRandomItem();\n      while(currentMonsterName === newMonsterName.many) {\n          newMonsterName = getRandomItem();\n      }\n      setMovieTitle2(newMonsterName.many);\n  }\n\n  const handleVsToggle = () => {\n      setVsToggle(!vsToggle);\n  }\n\n  const handlePrefixToggle = () => {\n    prefix ? setPrefix(null) : generatePrefix();\n  }\n  const handleSuffixToggle = () => {\n      suffix ? setSuffix(null) : generateSuffix();\n  }\n\n  const generatePrefix = () => {\n      setPrefix(creatureList.prefix[Math.floor(Math.random() * creatureList.prefix.length)]);\n  }\n\n  const generateSuffix = () => {\n      setSuffix(creatureList.suffix[Math.floor(Math.random() * creatureList.suffix.length)]);\n  }\n\n  useEffect(() =>{\n      handleInitialTitle();\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Header/>\n        <div className={classes.root}>\n            <Typography sx={{fontFamily: 'Amatic SC', fontWeight: 'bold'}} variant={'h3'} gutterBottom>\n                {prefix && <span>{prefix}</span>}&nbsp;{movieTitle1}&nbsp;{vsToggle && <span>vs&nbsp;</span>}{movieTitle2}&nbsp;{suffix && <span>{suffix}</span>}\n            </Typography>\n            <div className={classes.form}>\n                <span className={classes.formTitle}>Randomizer</span>\n                <Button\n                    variant={'contained'}\n                    onClick={handleInitialTitle}\n                >Full Shuffle\n                </Button>\n                <div className={classes.buttonContainerMonster}>\n                    <Button\n                        variant={'contained'}\n                        onClick={handleTitle1Change}\n                    >Monster One</Button>\n                    <Button\n                        variant={'contained'}\n                        onClick={handleTitle2Change}\n                    >Monster Two</Button>\n                </div>\n                <div className={classes.optionals}>\n                    <div>\n                        <FormControlLabel control={<Switch/>} label={'Prefix'} onChange={handlePrefixToggle}/>\n                        {prefix && <Button variant={'contained'}>Shuffle Prefix</Button>}\n                    </div>\n                    <div>\n                        <FormControlLabel control={<Switch/>} label={'Display VS'} onChange={handleVsToggle}/>\n                    </div>\n                    <div>\n                        <FormControlLabel control={<Switch/>} label={'Suffix'} onChange={handleSuffixToggle}/>\n                        {suffix && <Button variant={'contained'}>Shuffle Suffix</Button>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}