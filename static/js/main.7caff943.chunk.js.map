{"version":3,"sources":["components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","Header","props","results","width","display","flexDirection","justifyContent","margin","padding","item","marginRight","borderBottom","buttons","App","classes","useState","movieTitle1","setMovieTitle1","movieTitle2","setMovieTitle2","movieTitle3","getRandomItem","creatureList","Math","floor","random","length","handleInitialTitle","title1","title2","useEffect","className","Button","variant","onClick","sx","currentMonsterName","newMonsterName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAGMA,EAAYC,aAAW,iBAAO,CAChCC,KAAM,OAeKC,EAVD,SAACC,GACKJ,IAEhB,OACI,6D,QCNFA,EAAYC,aAAW,iBAAO,CAChCI,QAAS,CACLC,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,OAAQ,YACRC,QAAS,QAEbC,KAAM,CACFC,YAAa,GACbP,MAAO,IACPQ,aAAc,kBACdH,QAAS,QAEbI,QAAS,CACLL,OAAQ,cAsEDM,MAjEf,WACE,IAAMC,EAAUjB,IADH,EAGyBkB,mBAAS,IAHlC,mBAGNC,EAHM,KAGOC,EAHP,OAIyBF,mBAAS,IAJlC,mBAING,EAJM,KAIOC,EAJP,OAKyBJ,mBAAS,IALlC,mBAKNK,EALM,KAOPC,GAPO,KAOS,WAClB,OAAOC,IAAqBC,KAAKC,MAAMD,KAAKE,SAAWH,IAAqBI,WAG1EC,EAAqB,WAGvB,IAFA,IAAIC,EAASP,IACTQ,EAASR,IACPO,IAAWC,GACbA,EAASR,IAEbJ,EAAeW,GACfT,EAAeU,IAoBnB,OAJAC,qBAAU,WACNH,MACF,IAGA,sBAAKI,UAAU,MAAf,UACE,cAAC,EAAD,IACE,qBAAKA,UAAWjB,EAAQZ,QAAxB,mBACQc,EADR,YACuBE,EADvB,aACuCE,KAEzC,sBAAKW,UAAWjB,EAAQF,QAAxB,UACI,cAACoB,EAAA,EAAD,CACIC,QAAS,YACTC,QA1Be,WACvBjB,EAAeI,IA0BPc,GAAI,CAACzB,YAAa,OAHtB,yBAKA,cAACsB,EAAA,EAAD,CACIC,QAAS,YACTC,QA3Be,WAGvB,IAFA,IAAME,EAAqBlB,EACvBmB,EAAiBhB,IACfe,IAAuBC,GACzBA,EAAiBhB,IAErBF,EAAekB,IAmBX,4BAKF,cAACL,EAAA,EAAD,CACIC,QAAS,YACTC,QAASP,EAFb,8BCvEOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7caff943.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() =>( {\r\n    root: {\r\n\r\n    }\r\n}))\r\n\r\nconst Header =(props) =>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <h1>\r\n            Creature Feature Generator\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Button} from '@mui/material';\nimport Header from \"./components/Header\";\nimport * as creatureList from './name.json';\n\nconst useStyles = makeStyles(() => ({\n    results: {\n        width: '400px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        margin: '10px auto',\n        padding: '10px',\n    },\n    item: {\n        marginRight: 10,\n        width: 100,\n        borderBottom: '1px solid black',\n        padding: '10px'\n    },\n    buttons: {\n        margin: '10px 0',\n\n    }\n}))\n\nfunction App() {\n  const classes = useStyles();\n\n  const [movieTitle1, setMovieTitle1] = useState(\"\");\n  const [movieTitle2, setMovieTitle2] = useState(\"\");\n  const [movieTitle3, setMovieTitle3] = useState(\"\");\n\n  const getRandomItem = () => {\n      return creatureList.monster[Math.floor(Math.random() * creatureList.monster.length)];\n  }\n\n  const handleInitialTitle = () => {\n      let title1 = getRandomItem();\n      let title2 = getRandomItem();\n      while(title1 === title2) {\n          title2 = getRandomItem();\n      }\n      setMovieTitle1(title1);\n      setMovieTitle2(title2);\n  }\n\n  const handleTitle1Change = () => {\n      setMovieTitle1(getRandomItem);\n  }\n\n  const handleTitle2Change = () => {\n      const currentMonsterName = movieTitle2;\n      let newMonsterName = getRandomItem();\n      while(currentMonsterName === newMonsterName) {\n          newMonsterName = getRandomItem();\n      }\n      setMovieTitle2(newMonsterName);\n  }\n\n  useEffect(() =>{\n      handleInitialTitle();\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Header/>\n        <div className={classes.results}>\n            {`${movieTitle1} ${movieTitle2}s ${movieTitle3}`}\n        </div>\n      <div className={classes.buttons}>\n          <Button\n              variant={'contained'}\n              onClick={handleTitle1Change}\n              sx={{marginRight: '5px'}}\n          >Monster One</Button>\n          <Button\n              variant={'contained'}\n              onClick={handleTitle2Change}\n          >Monster Two</Button>\n      </div>\n        <Button\n            variant={'contained'}\n            onClick={handleInitialTitle}\n        >\n            Full Shuffle\n        </Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}