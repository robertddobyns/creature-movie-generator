{"version":3,"sources":["components/logo.jpg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","Header","props","classes","className","src","logo","alt","display","flexDirection","alignItems","height","buttonContainerMonster","justifyContent","margin","formContainer","position","bottom","width","form","maxWidth","padding","paddingTop","border","marginBottom","formTitle","top","textAlign","borderRadius","background","color","optionals","version","right","App","useState","movieTitle1","setMovieTitle1","movieTitle2","setMovieTitle2","prefix","setPrefix","suffix","setSuffix","vsToggle","setVsToggle","getRandomItem","creatureList","Math","floor","random","length","handleInitialTitle","title1","title2","generatePrefix","generateSuffix","useEffect","Typography","sx","fontFamily","fontWeight","variant","gutterBottom","many","one","Button","onClick","item","currentMonsterName","newMonsterName","FormControlLabel","control","Switch","label","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4db9e20d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7d825637.jpg\";","import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\nimport logo from './logo.jpg';\r\n\r\nconst useStyles = makeStyles(() =>( {\r\n    root: {\r\n    }\r\n}))\r\n\r\nconst Header =(props) =>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <img src={logo} alt={'logo'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Button, Switch, FormControlLabel, FormControl, FormGroup, Typography} from '@mui/material';\nimport Header from \"./components/Header\";\nimport * as creatureList from './name.json';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n    },\n    buttonContainerMonster: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        margin: '10px 0'\n    },\n    formContainer: {\n        position: \"fixed\",\n        bottom: 0,\n        width: '100vw',\n    },\n    form: {\n        maxWidth: '400px',\n        width: '90vw',\n        margin: '0 auto',\n        position: 'relative',\n        padding: '10px',\n        paddingTop: '30px',\n        border: '1px solid black',\n        marginBottom: '20px'\n    },\n    formTitle: {\n        position: 'absolute',\n        width: '95%',\n        top: '-15px',\n        textAlign: 'center',\n        border: '1px solid black',\n        borderRadius: '10px',\n        background: '#76a9db',\n        color: 'white',\n        padding: '5px 0'\n    },\n    optionals: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'left'\n    },\n    version: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        color: 'lightgray',\n    }\n}))\n\nfunction App() {\n  const classes = useStyles();\n\n  const [movieTitle1, setMovieTitle1] = useState(\"\");\n  const [movieTitle2, setMovieTitle2] = useState(\"\");\n  const [prefix, setPrefix] = useState(null);\n  const [suffix, setSuffix] = useState(null);\n  const [vsToggle, setVsToggle] = useState(false);\n\n  const version = '0.0.3';\n\n  const getRandomItem = () => {\n      return creatureList.monster[Math.floor(Math.random() * creatureList.monster.length)];\n  }\n\n  const handleInitialTitle = () => {\n      let title1 = getRandomItem();\n      let title2 = getRandomItem();\n      while(title1 === title2) {\n          title2 = getRandomItem();\n      }\n\n      if(prefix) {\n          generatePrefix();\n      }\n\n      if(suffix) {\n          generateSuffix();\n      }\n\n      setMovieTitle1(title1);\n      setMovieTitle2(title2);\n  }\n\n  const handleTitle1Change = () => {\n      const item = getRandomItem();\n      setMovieTitle1(item);\n  }\n\n  const handleTitle2Change = () => {\n      const currentMonsterName = movieTitle2;\n      let newMonsterName = getRandomItem();\n      while(currentMonsterName === newMonsterName) {\n          newMonsterName = getRandomItem();\n      }\n      setMovieTitle2(newMonsterName);\n  }\n\n  const handleVsToggle = () => {\n      setVsToggle(!vsToggle);\n  }\n\n  const handlePrefixToggle = () => {\n    prefix ? setPrefix(null) : generatePrefix();\n  }\n  const handleSuffixToggle = () => {\n      suffix ? setSuffix(null) : generateSuffix();\n  }\n\n  const generatePrefix = () => {\n      setPrefix(creatureList.prefix[Math.floor(Math.random() * creatureList.prefix.length)]);\n  }\n\n  const generateSuffix = () => {\n      setSuffix(creatureList.suffix[Math.floor(Math.random() * creatureList.suffix.length)]);\n  }\n\n  useEffect(() =>{\n      handleInitialTitle();\n  },[])\n\n  return (\n    <div className={classes.root}>\n        <Header/>\n        <Typography sx={{fontFamily: 'Amatic SC', fontWeight: 'bold', textAlign: 'center'}} variant={'h4'} gutterBottom>\n            {prefix && <span>{prefix}</span>}&nbsp;{vsToggle ? movieTitle1.many : movieTitle1.one}&nbsp;{vsToggle && <span>vs&nbsp;</span>}{movieTitle2.many}&nbsp;{suffix && <span>{suffix}</span>}\n        </Typography>\n        <div className={classes.formContainer}>\n            <div className={classes.form}>\n                <div className={classes.formTitle}>\n                    Randomizer\n                </div>\n                <Button\n                    sx={{width: '100%'}}\n                    variant={'contained'}\n                    onClick={handleInitialTitle}\n                >Full Shuffle\n                </Button>\n                <div className={classes.buttonContainerMonster}>\n                    <Button\n                        variant={'contained'}\n                        onClick={handleTitle1Change}\n                    >Monster One</Button>\n                    <Button\n                        variant={'contained'}\n                        onClick={handleTitle2Change}\n                    >Monster Two</Button>\n                </div>\n                <div className={classes.optionals}>\n                    <div>\n                        <FormControlLabel control={<Switch/>} label={'Prefix'} onChange={handlePrefixToggle}/>\n                        {prefix && <Button variant={'contained'} onClick={generatePrefix}>Shuffle Prefix</Button>}\n                    </div>\n                    <div>\n                        <FormControlLabel control={<Switch/>} label={'Display VS'} onChange={handleVsToggle}/>\n                    </div>\n                    <div>\n                        <FormControlLabel control={<Switch/>} label={'Suffix'} onChange={handleSuffixToggle}/>\n                        {suffix && <Button variant={'contained'} onClick={generateSuffix}>Shuffle Suffix</Button>}\n                    </div>\n                </div>\n                <div className={classes.version}>\n                    {version}\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}